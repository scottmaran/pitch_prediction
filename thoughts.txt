
pcount_at_bat = balls + strikes + fouls

Features:
    Game context:
        - time/date/year (start_tfs_zulu, date, year)
        - score of game (home_team_runs - away_team_runs)
        - who's on base (on_1b, on_2b, on_3b)
        - inning, top of inning (inning, top)
        - balls/strikes/fouls/outs
    Pitcher/Batter context:
        - pitcher handedness (p_throws)
        - pcount_pitcher (total num pitches thrown by pitcher)
        - batter stance (stand)
        - batter height (b_height)
        - at_bat_num (THINK where in batting order)
    Past Pitcher tendencies:

    - how good the batter is (past batting average)
    - Do we need pitcher ID if we have as feature all pitch type history rates?
        Actually maybe? For tree model, easier to split based on id than one of pitch type 

Target: (https://www.daktronics.com/en-us/support/kb/DD3312647)
    Fastballs: - defined by speed 
        'FA', Fastball
        'FF', Four-Seam Fastball    - Carry (straight)
        'FT', Two-Seam Fastball     - Run 
        'SI', Sinker                - Drop 

        'FC', Fastball (cutter)     - Horizontal, opposite direction of two-seamer 
            - for RHP, right to left (like volleyball cut shot)

        'FS', Split-Fingered        - looks like fastball till drops
    Breaking Balls: - defined by movement 
        'SL', Slider                - sideways, same direction as cutter, more sweeping (i.e. see break happening from beginning to end)
        'CU', Curveball             - up and down 
        'CH', Changeup              - look like fastball but are slower (gets batter to swing too early), can have some fade (move right with righties)
        'KC', Knuckle-Curve
        'KN', Knucleball 
        'EP', Eephus                - rare, "slowball"
    Other: 
        'UN', Unidentified
        'PO', Pitch out 
        'FO', Forkball
        'SC', Screwball

        'IN', Intentional Ball
        'AB', Automatic Ball 
    Links:
        https://www.mlb.com/news/identifying-pitch-types-a-fan-s-guide

Prior Work:
Good Paper: LDA, SVM, and RandomForest (https://content.iospress.com/download/journal-of-sports-analytics/jsa171?id=journal-of-sports-analytics%2Fjsa171)
    - one of leading papers on multiclass classification
Ryan Plunkett (https://dash.harvard.edu/bitstream/handle/1/37364634/PLUNKETT-SENIORTHESIS-2019.pdf?sequence=1&isAllowed=y)
    - pitcher similarity leverage
LSTM Paper (https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9859411)

Fan Graphs LSTM : https://community.fangraphs.com/no-pitch-is-an-island-pitch-prediction-with-sequence-to-sequence-deep-learning/
    - 85,927 plate appearances for training, two-layer LSTM, Encoder-Decoder model 
    - target = final two pitches in plate appearance  
Good Kaggle Notebook : https://www.kaggle.com/code/pschale/pitch-type-prediction
(Sloppy) RandomForest repo : https://github.com/Yuanyuan229/Pitch-Type-Prediction
Paper by Glenn Sidle and Hien Tran (2015)
Overview:
    - RAN AN INDIVIDUAL MODEL FOR EACH PITCHER
    - Used data from three seasons (2013-2015) to predict pitch type, achieved 66.62% accuracy using LDA, SVM, RF
    - binary prediction (fastball vs non-fastball) usueally around 70% accuracy
    - Seven pitch categories and those that had type confidence greater than 80%
    fastball (FF, 1), cutter (CT, 2), sinker (SI, 3), slider (SL, 4), curveball (CU, 5), changeup (CH, 6), and knuckleball (KN, 7)
    - only used pitchers with at least 500 pitches in a season, so 287 unique pitchers (150 starters vs 137 relievers)
    - average pitcher had 81 features
    - Features: pretty much what I was thinking. Get game state, pitchers prior tendencies, and batter's tendencies
Model:
    - 66.62% accuracte with RF
    - gives prediction accuracy for each pitch count 
    - looked at correlations - the higher the HHI (how often throw the same pitch), the more accurate the model (R^2=.77)
    - gave feature importance 

IIE Paper
Overview:
    - Also individual models for pitches
    - Did some weird/interesting sequence manipulation to have more samples
    - LSTM models and XGBoost

Models:
    - Seq-to-Seq model: given sequence of pitch with context
    - Tree model: given player's prior stats and current context, predict pitch type
    
    
    - If have tabular data (e.g. classification types), maybe tree model
    -

Results:
    - one big tree          -> 46.2%
    - individual XGBoosts   -> 42.6%

(Precision : given all predictions, how many true)
    (cares about false positives)
(Recall : given all true, how many did we predict)
    (cares about false negatives)


